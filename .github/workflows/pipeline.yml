name: Build and Push Image to AWS ECR
on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image1
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
      run: |
        cd $GITHUB_WORKSPACE/FlaskApp
        docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }} .
        docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }}

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image2
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
      run: |
        cd $GITHUB_WORKSPACE/db
        docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }} .
        docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPO}}:${{ github.run_number }}

  update-kubeconfig:
    needs: build-and-push
    name: Update kubeconfig
    runs-on: ubuntu-latest
    steps:

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: "v1.24.0"
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Update kube config
      run: aws eks update-kubeconfig --name hr-stag-eksdemo1 --region us-east-1 

    - name: Deploy Manifests
      run: |
       cd $GITHUB_WORKSPACE/k8s-manifests
       kubectl apply -f pv.yml -f pvc.yml  -f db-service.yml -f ConfigMap-db.yml -f statfullset.yml
       kubectl apply -f ConfigMap-app.yml -f app-service.yml -f deployment.yml
       kubectl apply -f k8s/ingress.yml
       kubectl get ing
